// Generated from p.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,17,93,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,
3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,4,10,57,8,10,11,10,
12,10,58,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,
1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,3,
16,88,8,16,1,16,1,16,1,16,1,16,0,0,17,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,1,0,4,2,0,65,90,97,
122,1,0,48,57,5,0,33,33,44,44,46,46,58,58,63,63,2,0,9,9,32,32,94,0,1,1,0,
0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,0,
0,0,3,37,1,0,0,0,5,39,1,0,0,0,7,41,1,0,0,0,9,43,1,0,0,0,11,45,1,0,0,0,13,
47,1,0,0,0,15,49,1,0,0,0,17,51,1,0,0,0,19,53,1,0,0,0,21,56,1,0,0,0,23,62,
1,0,0,0,25,64,1,0,0,0,27,71,1,0,0,0,29,74,1,0,0,0,31,79,1,0,0,0,33,87,1,
0,0,0,35,36,5,48,0,0,36,2,1,0,0,0,37,38,5,49,0,0,38,4,1,0,0,0,39,40,5,34,
0,0,40,6,1,0,0,0,41,42,7,0,0,0,42,8,1,0,0,0,43,44,7,1,0,0,44,10,1,0,0,0,
45,46,7,2,0,0,46,12,1,0,0,0,47,48,5,40,0,0,48,14,1,0,0,0,49,50,5,41,0,0,
50,16,1,0,0,0,51,52,5,123,0,0,52,18,1,0,0,0,53,54,5,125,0,0,54,20,1,0,0,
0,55,57,7,3,0,0,56,55,1,0,0,0,57,58,1,0,0,0,58,56,1,0,0,0,58,59,1,0,0,0,
59,60,1,0,0,0,60,61,6,10,0,0,61,22,1,0,0,0,62,63,5,59,0,0,63,24,1,0,0,0,
64,65,5,112,0,0,65,66,5,114,0,0,66,67,5,105,0,0,67,68,5,110,0,0,68,69,5,
116,0,0,69,70,5,102,0,0,70,26,1,0,0,0,71,72,5,105,0,0,72,73,5,102,0,0,73,
28,1,0,0,0,74,75,5,101,0,0,75,76,5,108,0,0,76,77,5,115,0,0,77,78,5,101,0,
0,78,30,1,0,0,0,79,80,5,114,0,0,80,81,5,101,0,0,81,82,5,116,0,0,82,83,5,
117,0,0,83,84,5,114,0,0,84,85,5,110,0,0,85,32,1,0,0,0,86,88,5,13,0,0,87,
86,1,0,0,0,87,88,1,0,0,0,88,89,1,0,0,0,89,90,5,10,0,0,90,91,1,0,0,0,91,92,
6,16,0,0,92,34,1,0,0,0,3,0,58,87,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class pLexer extends antlr4.Lexer {

    static grammarFileName = "p.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'0'", "'1'", "'\"'", null, null, null, "'('", 
                         "')'", "'{'", "'}'", null, "';'", "'printf'", "'if'", 
                         "'else'", "'return'" ];
	static symbolicNames = [ null, null, null, null, "LETRA", "DIGITO", "SIMBOLO", 
                          "LPAREN", "RPAREN", "LLLAVE", "RLLAVE", "WS", 
                          "SEMICOLON", "PRINTF", "IF", "ELSE", "RETURN", 
                          "NEWLINE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "LETRA", "DIGITO", "SIMBOLO", 
                      "LPAREN", "RPAREN", "LLLAVE", "RLLAVE", "WS", "SEMICOLON", 
                      "PRINTF", "IF", "ELSE", "RETURN", "NEWLINE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

pLexer.EOF = antlr4.Token.EOF;
pLexer.T__0 = 1;
pLexer.T__1 = 2;
pLexer.T__2 = 3;
pLexer.LETRA = 4;
pLexer.DIGITO = 5;
pLexer.SIMBOLO = 6;
pLexer.LPAREN = 7;
pLexer.RPAREN = 8;
pLexer.LLLAVE = 9;
pLexer.RLLAVE = 10;
pLexer.WS = 11;
pLexer.SEMICOLON = 12;
pLexer.PRINTF = 13;
pLexer.IF = 14;
pLexer.ELSE = 15;
pLexer.RETURN = 16;
pLexer.NEWLINE = 17;



